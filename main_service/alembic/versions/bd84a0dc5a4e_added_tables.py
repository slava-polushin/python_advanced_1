"""Added tables

Revision ID: bd84a0dc5a4e
Revises: 
Create Date: 2024-09-01 23:04:47.489250

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bd84a0dc5a4e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cars',
    sa.Column('car_id', sa.BigInteger(), nullable=False, comment='Идентификатор автомобиля'),
    sa.Column('model', sa.String(), nullable=True, comment='Модель автомобиля'),
    sa.Column('color', sa.String(), nullable=True, comment='Цвет автомобиля'),
    sa.Column('production_date', sa.Date(), nullable=True, comment='Дата производства'),
    sa.Column('vin_number', sa.String(), nullable=True, comment='Номер VIN'),
    sa.Column('reg_number', sa.String(), nullable=True, comment='Регистрационный номер'),
    sa.Column('comment', sa.Text(), nullable=True, comment='Комментарий'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата создания записи'),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата изменения записи'),
    sa.PrimaryKeyConstraint('car_id', name='cars_pkey'),
    comment='Автомобили такси'
    )
    op.create_index('cars_model_idx', 'cars', ['model'], unique=False)
    op.create_index('cars_reg_number_idx', 'cars', ['reg_number'], unique=False)
    op.create_index('cars_vin_number_idx', 'cars', ['vin_number'], unique=False)
    op.create_table('clients',
    sa.Column('client_id', sa.BigInteger(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('client_name', sa.String(), nullable=False, comment='Имя клиента'),
    sa.Column('comment', sa.Text(), nullable=True, comment='Комментарий'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата создания записи клиента'),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата изменения записи клиента'),
    sa.PrimaryKeyConstraint('client_id', name='clients_pkey'),
    comment='Клиенты сервиса такси'
    )
    op.create_table('drivers',
    sa.Column('driver_id', sa.BigInteger(), nullable=False, comment='Идентификатор водителя'),
    sa.Column('driver_name', sa.String(), nullable=False, comment='Имя водителя'),
    sa.Column('driver_license', sa.String(), nullable=False, comment='Номер водительского удостоверения'),
    sa.Column('comment', sa.Text(), nullable=True, comment='Комментарий'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата создания записи клиента'),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата изменения записи клиента'),
    sa.PrimaryKeyConstraint('driver_id', name='drivers_pkey'),
    comment='Водители автомобилей'
    )
    op.create_table('car_drivers',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Идентификатор записи назначения водителя автомобилю'),
    sa.Column('car_id', sa.BigInteger(), nullable=False, comment='Идентификатор автомобиля'),
    sa.Column('driver_id', sa.BigInteger(), nullable=True, comment='Идентификатор водителя'),
    sa.Column('fromdate', sa.Date(), nullable=False, comment='Дата, с которой водитель назначен на автомобиль'),
    sa.Column('comment', sa.Text(), nullable=True, comment='Комментарий'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата создания записи назначения'),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата изменения записи назначения'),
    sa.ForeignKeyConstraint(['car_id'], ['cars.car_id'], name='car_drivers_car_id_fkey'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.driver_id'], name='car_drivers_driver_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='car_drivers_pkey'),
    sa.UniqueConstraint('car_id', 'fromdate', name='car_drivers_altkey'),
    comment='Назначение водителей автомобилям'
    )
    op.create_index('car_drivers_car_id_idx', 'car_drivers', ['car_id', 'fromdate'], unique=False)
    op.create_table('orders',
    sa.Column('order_id', sa.BigInteger(), nullable=False, comment='Идентификатор заказа'),
    sa.Column('client_id', sa.BigInteger(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('start_address', sa.String(), nullable=False, comment='Адрес начала поездки'),
    sa.Column('start_latitude', sa.Numeric(precision=7, scale=5), nullable=True, comment='широта точки старта'),
    sa.Column('start_longitude', sa.Numeric(precision=8, scale=5), nullable=True, comment='долгота точки старта'),
    sa.Column('finish_address', sa.String(), nullable=True, comment='Адрес завершения поездки'),
    sa.Column('finish_latitude', sa.Numeric(precision=7, scale=5), nullable=True, comment='широта точки финиша'),
    sa.Column('finish_longitude', sa.Numeric(precision=8, scale=5), nullable=True, comment='долгота точки финиша'),
    sa.Column('price', sa.Numeric(precision=18, scale=2), nullable=True, comment='цена поездки'),
    sa.Column('comment', sa.Text(), nullable=True, comment='Комментарий'),
    sa.Column('baby_chair_fl', sa.Boolean(), nullable=True, comment='признак необходимости детского кресла'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата создания заказа'),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата изменения заказа'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name='orders_client_id_fkey'),
    sa.PrimaryKeyConstraint('order_id', name='orders_pkey'),
    comment='Заказы такси'
    )
    op.create_index('orders_client_id_idx', 'orders', ['client_id'], unique=False)
    op.create_table('car_status',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Идентификатор записи состояния автомобиля'),
    sa.Column('car_id', sa.BigInteger(), nullable=False, comment='Идентификатор автомобиля'),
    sa.Column('status', sa.String(), nullable=False, comment='Статус автомобиля, может быть равен: {free, busy, broken, driver_missing}'),
    sa.Column('current_latitude', sa.Numeric(precision=7, scale=5), nullable=True, comment='Широта текущего местоположения'),
    sa.Column('current_longitude', sa.Numeric(precision=8, scale=5), nullable=True, comment='Долгота текущего местоположения'),
    sa.Column('order_id', sa.BigInteger(), nullable=True, comment='Заказ, на который назначен автомобиль на текущий момент (может быть пустым)'),
    sa.Column('comment', sa.Text(), nullable=True, comment='Комментарий'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата создания исторической записи заказа'),
    sa.ForeignKeyConstraint(['car_id'], ['cars.car_id'], name='car_status_car_id_fkey'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], name='car_status_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='car_status_pkey'),
    comment='История состояний автомобиля'
    )
    op.create_index('car_status_car_id_idx', 'car_status', ['car_id'], unique=False)
    op.create_index('car_status_order_id_idx', 'car_status', ['order_id'], unique=False)
    op.create_table('order_status',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Идентификатор записи истории заказа'),
    sa.Column('order_id', sa.BigInteger(), nullable=False, comment='Идентификатор заказа'),
    sa.Column('status', sa.String(), nullable=False, comment='Статус заказа, может быть равен: {created, car_assigned, trip_started, trip_finished, cancelled}'),
    sa.Column('car_id', sa.BigInteger(), nullable=True, comment='Идентификатор автомобиля'),
    sa.Column('comment', sa.Text(), nullable=True, comment='Комментарий'),
    sa.Column('start_at', sa.DateTime(), nullable=True, comment='Время начала поездки'),
    sa.Column('finish_at', sa.DateTime(), nullable=True, comment='Время завершения поездки'),
    sa.Column('unpaid_rest', sa.Numeric(precision=18, scale=2), nullable=True, comment='Неоплаченный остаток'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата создания исторической записи заказа'),
    sa.ForeignKeyConstraint(['car_id'], ['cars.car_id'], name='order_status_car_id_fkey'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], name='order_status_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_status_pkey'),
    comment='История статусов заказов такси. Столбцы начиная с car_id необязательны, и заполняются по мере назначения автомобиля, начала поездки, завершения поездки, оплаты поездки соответственно'
    )
    op.create_index('order_status_car_id_idx', 'order_status', ['car_id'], unique=False)
    op.create_index('order_status_order_id_idx', 'order_status', ['order_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('order_status_order_id_idx', table_name='order_status')
    op.drop_index('order_status_car_id_idx', table_name='order_status')
    op.drop_table('order_status')
    op.drop_index('car_status_order_id_idx', table_name='car_status')
    op.drop_index('car_status_car_id_idx', table_name='car_status')
    op.drop_table('car_status')
    op.drop_index('orders_client_id_idx', table_name='orders')
    op.drop_table('orders')
    op.drop_index('car_drivers_car_id_idx', table_name='car_drivers')
    op.drop_table('car_drivers')
    op.drop_table('drivers')
    op.drop_table('clients')
    op.drop_index('cars_vin_number_idx', table_name='cars')
    op.drop_index('cars_reg_number_idx', table_name='cars')
    op.drop_index('cars_model_idx', table_name='cars')
    op.drop_table('cars')
    # ### end Alembic commands ###
